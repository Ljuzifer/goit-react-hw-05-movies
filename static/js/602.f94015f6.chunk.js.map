{"version":3,"file":"static/js/602.f94015f6.chunk.js","mappings":"kPA8HA,UAxHyB,WAAO,IAAD,IACrBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAmBvD,IAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,iBAAaZ,GACxBa,EAAAA,GAAAA,QAAc,mBAAoB,CAAEC,SAAU,MAE9CC,YAAU,iBAAC,8GAEoBC,EAAAA,EAAAA,GAAeJ,GAFnC,OAEDK,EAFC,OAGPb,EAAQa,GAHD,gDAKPC,QAAQC,KAAR,MACAN,EAAAA,GAAAA,MAAY,iCANL,yBAQPA,EAAAA,GAAAA,QAAc,iCARP,4EAUR,IACJ,GAAE,CAACb,IAES,OAATG,EAAJ,CAIA,IACEiB,EASEjB,EATFiB,MACAC,EAQElB,EARFkB,eACAC,EAOEnB,EAPFmB,YACAC,EAMEpB,EANFoB,OACAC,EAKErB,EALFqB,OACAC,EAIEtB,EAJFsB,SACAC,EAGEvB,EAHFuB,aACAC,EAEExB,EAFFwB,aACAC,EACEzB,EADFyB,SAEIC,EAASP,GAAW,wCAAqCA,GACzDQ,EAAUJ,GAAgBA,EAAaK,MAAM,EAAG,GAChDC,EAASL,GAAgBM,KAAKC,MAAqB,GAAfP,GACpCQ,EACJX,GACAA,EAAOY,KAAI,SAAAC,GAAG,OACZ,eAAiBC,MAAO,CAAEC,YAAa,QAAvC,UACE,uBAAIF,EAAIG,QADDH,EAAII,GADD,IAMhB,OACE,8BACGtC,IACC,kBAAMmC,MAAO,CAAEI,QAAS,OAAxB,WACE,mBACA,UAAC,KAAD,CACEC,GAAIpC,EAAgBqC,QACpBN,MAAO,CACLO,QAAS,OACTC,WAAY,SACZC,MAAO,cACPC,OAAQ,YACRN,QAAS,MACTO,aAAc,MACdC,eAAgB,QATpB,WAYE,SAAC,MAAD,IAZF,eAcA,qBAASZ,MAAO,CAAEO,QAAS,QAA3B,WACE,gBAAKM,IAAKtB,EAAQuB,IAAK/B,EAAgB0B,MAAM,MAAMM,OAAO,SAC1D,iBAAKf,MAAO,CAAEgB,WAAY,QAA1B,WACE,0BACGlC,EADH,KACYU,EADZ,OAGCP,GACC,4CACiB,uBAAIA,OAEnB,MACJ,yCACc,yBAAIS,EAAJ,WAEd,sCACA,yBAAIJ,EAAJ,QACA,oCACA,eAAIU,MAAO,CAAEO,QAAS,OAAQU,UAAW,OAAQb,QAAS,GAA1D,SACGP,IAEFV,IACC,4BACE,uCACA,cAAG+B,KAAM/B,EAAUgC,OAAO,SAASC,IAAI,aAAvC,SACGjC,cAMX,mBACA,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMkB,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,8BAIN,mBACA,SAAC,EAAAgB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAvFT,CA6FF,C,8FCzHDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAM7C,EAAc,mCAAG,WAAOJ,EAAOkD,GAAd,uFACLD,EAAAA,EAAAA,IAAA,UAAajD,EAAb,oBAJT,oCAIS,cAAwCkD,QAAxC,IAAwCA,EAAAA,EAAQ,KAD3C,cACtBC,EADsB,yBAErBA,EAASC,MAFY,2CAAH,uD","sources":["pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { RiArrowLeftCircleFill } from 'react-icons/ri';\nimport { toast } from 'react-hot-toast';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieInfo } from 'services/api';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState(null);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const route = `/movie/${movieId}`;\n    toast.loading('Wait a minute...', { duration: 700 });\n\n    setTimeout(async () => {\n      try {\n        const movieDetails = await fetchMovieInfo(route);\n        setInfo(movieDetails);\n      } catch (error) {\n        console.warn(error);\n        toast.error('Oops! Something went wrong...');\n      } finally {\n        toast.success('Ok! Let`s see what we have...');\n      }\n    }, 800);\n  }, [movieId]);\n\n  if (info === null) {\n    return;\n  }\n\n  const {\n    title,\n    original_title,\n    poster_path,\n    budget,\n    genres,\n    homepage,\n    release_date,\n    vote_average,\n    overview,\n  } = info;\n  const poster = poster_path && `http://image.tmdb.org/t/p/w342${poster_path}`;\n  const release = release_date && release_date.slice(0, 4);\n  const rating = vote_average && Math.round(vote_average * 10);\n  const tags =\n    genres &&\n    genres.map(tag => (\n      <li key={tag.id} style={{ marginRight: '22px' }}>\n        <p>{tag.name}</p>\n      </li>\n    ));\n\n  return (\n    <>\n      {info && (\n        <main style={{ padding: '8px' }}>\n          <hr />\n          <Link\n            to={backLocationRef.current}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              width: 'fit-content',\n              border: '1px solid',\n              padding: '4px',\n              marginBottom: '2px',\n              textDecoration: 'none',\n            }}\n          >\n            <RiArrowLeftCircleFill /> Go back\n          </Link>\n          <section style={{ display: 'flex' }}>\n            <img src={poster} alt={original_title} width=\"280\" height=\"420\" />\n            <div style={{ marginLeft: '22px' }}>\n              <h2>\n                {title} ({release})\n              </h2>\n              {budget ? (\n                <p>\n                  The budget($): <b>{budget}</b>\n                </p>\n              ) : null}\n              <p>\n                User Score: <b>{rating}%</b>\n              </p>\n              <h3>Overview</h3>\n              <p>{overview} </p>\n              <h4>Genres</h4>\n              <ul style={{ display: 'flex', listStyle: 'none', padding: 0 }}>\n                {tags}\n              </ul>\n              {homepage && (\n                <div>\n                  <p>Homepage: </p>\n                  <a href={homepage} target=\"_blank\" rel=\"noreferrer\">\n                    {homepage}\n                  </a>\n                </div>\n              )}\n            </div>\n          </section>\n          <hr />\n          <section>\n            <h5>Additional information</h5>\n            <ul>\n              <li>\n                <Link to={'cast'}>Cast</Link>\n              </li>\n              <li>\n                <Link to={'reviews'}>Reviews</Link>\n              </li>\n            </ul>\n          </section>\n          <hr />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'daca860db741facb25da0efbe03487a5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovieInfo = async (route, some) => {\n  const response = await axios.get(`${route}?api_key=${API_KEY}${some ?? ''}`);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","info","setInfo","location","useLocation","backLocationRef","useRef","state","from","useEffect","route","toast","duration","setTimeout","fetchMovieInfo","movieDetails","console","warn","title","original_title","poster_path","budget","genres","homepage","release_date","vote_average","overview","poster","release","slice","rating","Math","round","tags","map","tag","style","marginRight","name","id","padding","to","current","display","alignItems","width","border","marginBottom","textDecoration","src","alt","height","marginLeft","listStyle","href","target","rel","Suspense","fallback","axios","some","response","data"],"sourceRoot":""}