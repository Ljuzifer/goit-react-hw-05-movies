{"version":3,"file":"static/js/762.0733d76d.chunk.js","mappings":"mPAyDA,UAnDsB,WACpB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,iBAAaN,EAAb,YACXO,EAAAA,GAAAA,QAAc,mBAAoB,CAAEC,SAAU,MAE9CC,YAAU,iBAAC,gHAEmBC,EAAAA,EAAAA,GAAeJ,GAFlC,mBAGiB,KAAb,QADHK,EAFD,EAECA,eACG,IAAPA,OAAA,EAAAA,EAASC,QAHN,uBAILL,EAAAA,EAAAA,IAAM,wBAJD,0BAOPH,GAAW,OAAIO,IACfJ,EAAAA,GAAAA,QAAc,kBARP,kDAUPM,QAAQC,KAAR,MACAP,EAAAA,GAAAA,MAAY,iCAXL,0DAaR,IACJ,GAAE,CAACP,KAGF,+BACuB,KAAb,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASS,UACR,eAAGG,MAAO,CAAEC,UAAW,UAAvB,gEAEE,SAAC,MAAD,QAIJ,eAAID,MAAO,CAAEE,UAAW,QAAxB,SACGd,EAAQe,KAAI,SAAAC,GAAI,OACf,2BACE,qCACU,yBAAIA,EAAKC,OAAT,WAEV,kBAAML,MAAO,CAAEM,eAAgB,aAA/B,UACGF,EAAKG,WAAWC,MAAM,EAAG,IAAK,QAEjC,uBAAIJ,EAAKK,WACT,oBAROL,EAAKM,GADC,QAexB,C,8FCpDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMhB,EAAc,mCAAG,WAAOJ,EAAOqB,GAAd,uFACLD,EAAAA,EAAAA,IAAA,UAAapB,EAAb,oBAJT,oCAIS,cAAwCqB,QAAxC,IAAwCA,EAAAA,EAAQ,KAD3C,cACtBC,EADsB,yBAErBA,EAASC,MAFY,2CAAH,uD","sources":["components/MoviesReviews/MoviesReviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieInfo } from 'services/api';\nimport { TbMoodCry } from 'react-icons/tb';\n\nconst MoviesReviews = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const route = `/movie/${movieId}/reviews`;\n    toast.loading('Wait a minute...', { duration: 400 });\n\n    setTimeout(async () => {\n      try {\n        const { results } = await fetchMovieInfo(route);\n        if (results?.length === 0) {\n          toast('Sorry, no reviews...');\n          return;\n        }\n        setDetails([...results]);\n        toast.success('You`ve got it!');\n      } catch (error) {\n        console.warn(error);\n        toast.error('Oops! Something went wrong...');\n      }\n    }, 400);\n  }, [movieId]);\n\n  return (\n    <section>\n      {details?.length === 0 && (\n        <b style={{ textAlign: 'center' }}>\n          Sorry, we don't have any reviews for this movie...\n          <TbMoodCry />\n        </b>\n      )}\n\n      <ul style={{ listStyle: 'none' }}>\n        {details.map(item => (\n          <li key={item.id}>\n            <p>\n              Author: <b>{item.author} </b>\n            </p>\n            <span style={{ textDecoration: 'underline' }}>\n              {item.created_at.slice(0, 10)}{' '}\n            </span>\n            <p>{item.content}</p>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default MoviesReviews;\n","import axios from 'axios';\n\nconst API_KEY = 'daca860db741facb25da0efbe03487a5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovieInfo = async (route, some) => {\n  const response = await axios.get(`${route}?api_key=${API_KEY}${some ?? ''}`);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","details","setDetails","useEffect","route","toast","duration","setTimeout","fetchMovieInfo","results","length","console","warn","style","textAlign","listStyle","map","item","author","textDecoration","created_at","slice","content","id","axios","some","response","data"],"sourceRoot":""}